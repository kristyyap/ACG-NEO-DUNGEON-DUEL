// # = wall
// . = floor
// S = player-spawn
export const FIXED_LAYOUT = [
  "#########################################",
  "#S.............T#.....T.........#T......#",
  "#.#####.#.....#.#.####.######.#.#.#####.#",
  "#.#M........T.#.#.#.........#.#.#.#...#.#",
  "#.#....................####.#.........#T#",
  "#T..#T..#...#.#T..#.#.....#.#T........###",
  "#####.#.#...#.#####.#..##.#.#####T.....T#",
  "#...#.#.....#.....#.#...#.#.....#.#.....#",
  "#.#.#.#.#..T#####.......#.#####.#.#.....#",
  "#2....#.#.......T.#.....#########.#M....#",
  "#..###.....####.##.....###.T..#####.##T.#",
  "#..T..........#.....#.............#...###",
  "#####.....###.#...M.#.###....####T#####.#",
  "#.....T...#...#...#.#.#................T#",
  "#.####.####.####..#.#.#..###....#######.#",
  "#.#....M..#.........#.#..#T.....#T......#",
  "#.#.##....#####....T#.#..###....#.###...#",
  "#...##..##..........#.#.......#.#.#####.#",
  "#...##...####.###...#.#.####..#.#.#...#.#",
  "#3..###...#...T.....#.#..M....#.#.#...#T#",
  "#...####..#.#####...#.....#####.#.#...###",
  "#...#.....#.....#..T#.#...#.....#.#...###",
  "#...####.###.##.#..##.#...#.#####.#.M.#T#",
  "#T............#.#...#.#T#.#.....#...#.#.#",
  "#.####..##....#.###.#.#.#.#####.#.#...#.#",
  "#.......T.....#.....#.#.#.....#.#.#.....#",
  "######.....##.#....##.#.#####.#.###.....#",
  "#.T........M#...M.....#.....#.#.###.....#",
  "#.####...##.#.######...T###.#.#.#.#..4..#",
  "#.#.......#.#.............#.#.#.#.#T..#.#",
  "#.#.#####.#.#.####.###....#.#.#.#.#...#.#",
  "#.#.....#.#.....#.......T.#.#.....#######",
  "#.#####.#.###.#.#.#########.......#....T#",
  "#T....#.#...#.#.#..........T#.......#####",
  "#####.#.###.#.#.#############.#.#.#.#####",
  "#T....#.#...#.#.....T.........#.#.......#",
  "#.#####.#.###.#################.#M###.#.#",
  "#.#.....#.................M.....#.....#.#",
  "#.#.######.##..###........#######....##.#",
  "#.#...T..........M................T.....#",
  "#.######..###..#####..############..###.#",
  "#.....T..........M...............T......#",
  "#########################################"
];

import * as THREE from 'three';
export const DUNGEON_SIZE = 41;

export const spawnSpots    = [];
export const treasureSpots = [];
export const monsterSpots  = [];

for (let r = 0; r < DUNGEON_SIZE; r++) {
  for (let c = 0; c < DUNGEON_SIZE; c++) {
    const ch = FIXED_LAYOUT[r][c];
    // floor or wall — you’ll still do that in main.js when building geometry

    // pick up spawns
    let slot = null;
    if (ch === 'S')  slot = 0;
    if (ch === '2')  slot = 1;  // or if you literally wrote "S2" in the string, check FIXED_LAYOUT[r].substr(c,2)==='S2'
    if (ch === '3')  slot = 2;
    if (ch === '4')  slot = 3;
    if (slot !== null) {
      // same world‐coord calc you use in main.js:
      const x = (c - DUNGEON_SIZE/2 + 0.5) * 2;
      const z = (r - DUNGEON_SIZE/2 + 0.5) * 2;
      spawnSpots[slot] = new THREE.Vector3(x, /*playerHeight*/ 1.6, z);
    }

    // treasures & monsters
    if (ch === 'T') treasureSpots.push({ r, c });
    if (ch === 'M') monsterSpots .push({ r, c });
  }
}


